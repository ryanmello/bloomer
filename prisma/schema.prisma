datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Coupon {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  codeName   String   @unique
  discount   Float
  validUntil DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Link coupon to the user who created it
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  email    String  @unique
  password String
  image    String?
  role     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  shops   Shop[]
  coupons Coupon[]
}

model Shop {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  name   String
  phone  String
  email  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId String?   @db.ObjectId
}

model Customer {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  lastName       String
  email          String    @unique
  phoneNumber    String?
  additionalNote String?
  address        Address[]
  squareId       String?   
  group          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  shops Shop[]
}

model Address {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  line1   String
  line2   String?
  city    String
  state   String
  zip     String
  country String

  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String   @db.ObjectId
}
